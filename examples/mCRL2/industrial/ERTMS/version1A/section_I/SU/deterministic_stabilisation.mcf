% We check that on all reachable states of the system (while traversing non-expire_timer actions)
% the system never enters a state in which a VSS's next state is not-determined.
% Technically, this means that on all reachable states we require that whenever we receive
% a position report, whenever the system subsequently becomes stable, it stabilises uniquely
% and predictably (that is, if the system stabilises, it stabilises in a configuration that
% was already determined at the time the position report was received)

[(!exists v:VSS_id.( (exists tt:TTD_timer.expire_timer(v,tt)) || (exists vt:VSS_timer.expire_timer(v,vt)) || (exists trt:TRAIN_timer.expire_timer(v,trt))))*]
([exists tr:TRAIN_id,p:PTD. emit_position(tr,p)]
     exists l:VSS_statuslist. 
       ( val(l in 
       [
          [ambiguous_vss, ambiguous_vss, ambiguous_vss, unknown_vss, unknown_vss, free_vss, free_vss, free_vss]
        , [ambiguous_vss, ambiguous_vss, free_vss, free_vss, free_vss, free_vss, free_vss, free_vss]
        , [ambiguous_vss, ambiguous_vss, unknown_vss, unknown_vss, unknown_vss, free_vss, free_vss, free_vss]
        , [ambiguous_vss, free_vss, free_vss, free_vss, free_vss, free_vss, free_vss, free_vss]
        , [free_vss, ambiguous_vss, ambiguous_vss, unknown_vss, unknown_vss, free_vss, free_vss, free_vss]
        , [free_vss, ambiguous_vss, free_vss, free_vss, free_vss, free_vss, free_vss, free_vss]
        , [free_vss, ambiguous_vss, unknown_vss, unknown_vss, unknown_vss, free_vss, free_vss, free_vss]
        , [free_vss, free_vss, ambiguous_vss, ambiguous_vss, ambiguous_vss, ambiguous_vss, unknown_vss, unknown_vss]
        , [free_vss, free_vss, ambiguous_vss, ambiguous_vss, ambiguous_vss, free_vss, free_vss, free_vss]
        , [free_vss, free_vss, ambiguous_vss, ambiguous_vss, ambiguous_vss, unknown_vss, unknown_vss, unknown_vss]
        , [free_vss, free_vss, ambiguous_vss, ambiguous_vss, occupied_vss, free_vss, free_vss, free_vss]
        , [free_vss, free_vss, ambiguous_vss, ambiguous_vss, occupied_vss, occupied_vss, unknown_vss, unknown_vss]
        , [free_vss, free_vss, ambiguous_vss, ambiguous_vss, occupied_vss, unknown_vss, unknown_vss, unknown_vss]
        , [free_vss, free_vss, ambiguous_vss, ambiguous_vss, unknown_vss, free_vss, free_vss, free_vss]
        , [free_vss, free_vss, ambiguous_vss, occupied_vss, occupied_vss, free_vss, free_vss, free_vss]
        , [free_vss, free_vss, ambiguous_vss, occupied_vss, occupied_vss, occupied_vss, unknown_vss, unknown_vss]
        , [free_vss, free_vss, ambiguous_vss, occupied_vss, occupied_vss, unknown_vss, unknown_vss, unknown_vss]
        , [free_vss, free_vss, ambiguous_vss, occupied_vss, unknown_vss, free_vss, free_vss, free_vss]
        , [free_vss, free_vss, ambiguous_vss, occupied_vss, unknown_vss, unknown_vss, unknown_vss, unknown_vss]
        , [free_vss, free_vss, ambiguous_vss, unknown_vss, unknown_vss, free_vss, free_vss, free_vss]
        , [free_vss, free_vss, free_vss, ambiguous_vss, ambiguous_vss, ambiguous_vss, unknown_vss, unknown_vss]
        , [free_vss, free_vss, free_vss, ambiguous_vss, ambiguous_vss, free_vss, free_vss, free_vss]
        , [free_vss, free_vss, free_vss, ambiguous_vss, ambiguous_vss, unknown_vss, unknown_vss, unknown_vss]
        , [free_vss, free_vss, free_vss, ambiguous_vss, unknown_vss, free_vss, free_vss, free_vss]
        , [free_vss, free_vss, free_vss, free_vss, ambiguous_vss, ambiguous_vss, unknown_vss, unknown_vss]
        , [free_vss, free_vss, free_vss, free_vss, ambiguous_vss, free_vss, free_vss, free_vss]
        , [free_vss, free_vss, free_vss, free_vss, ambiguous_vss, unknown_vss, unknown_vss, unknown_vss]
        , [free_vss, free_vss, free_vss, free_vss, free_vss, ambiguous_vss, ambiguous_vss, ambiguous_vss]
        , [free_vss, free_vss, free_vss, free_vss, free_vss, ambiguous_vss, ambiguous_vss, occupied_vss]
        , [free_vss, free_vss, free_vss, free_vss, free_vss, ambiguous_vss, ambiguous_vss, unknown_vss]
        , [free_vss, free_vss, free_vss, free_vss, free_vss, ambiguous_vss, occupied_vss, occupied_vss]
        , [free_vss, free_vss, free_vss, free_vss, free_vss, ambiguous_vss, occupied_vss, unknown_vss]
        , [free_vss, free_vss, free_vss, free_vss, free_vss, ambiguous_vss, unknown_vss, unknown_vss]
        , [free_vss, free_vss, free_vss, free_vss, free_vss, free_vss, ambiguous_vss, ambiguous_vss]
        , [free_vss, free_vss, free_vss, free_vss, free_vss, free_vss, ambiguous_vss, unknown_vss]
        , [free_vss, free_vss, free_vss, free_vss, free_vss, free_vss, free_vss, ambiguous_vss]
        , [free_vss, free_vss, free_vss, free_vss, free_vss, free_vss, free_vss, occupied_vss]
        , [free_vss, free_vss, free_vss, free_vss, free_vss, free_vss, occupied_vss, occupied_vss]
        , [free_vss, free_vss, free_vss, free_vss, free_vss, free_vss, occupied_vss, unknown_vss]
        , [free_vss, free_vss, free_vss, free_vss, free_vss, free_vss, unknown_vss, ambiguous_vss]
        , [free_vss, free_vss, free_vss, free_vss, free_vss, occupied_vss, ambiguous_vss, occupied_vss]
        , [free_vss, free_vss, free_vss, free_vss, free_vss, occupied_vss, occupied_vss, occupied_vss]
        , [free_vss, free_vss, free_vss, free_vss, free_vss, occupied_vss, occupied_vss, unknown_vss]
        , [free_vss, free_vss, free_vss, free_vss, free_vss, occupied_vss, unknown_vss, unknown_vss]
        , [free_vss, free_vss, free_vss, free_vss, free_vss, unknown_vss, ambiguous_vss, ambiguous_vss]
        , [free_vss, free_vss, free_vss, free_vss, free_vss, unknown_vss, ambiguous_vss, occupied_vss]
        , [free_vss, free_vss, free_vss, free_vss, free_vss, unknown_vss, ambiguous_vss, unknown_vss]
        , [free_vss, free_vss, free_vss, free_vss, free_vss, unknown_vss, free_vss, ambiguous_vss]
        , [free_vss, free_vss, free_vss, free_vss, free_vss, unknown_vss, free_vss, occupied_vss]
        , [free_vss, free_vss, free_vss, free_vss, free_vss, unknown_vss, unknown_vss, ambiguous_vss]
        , [free_vss, free_vss, free_vss, free_vss, free_vss, unknown_vss, unknown_vss, unknown_vss]
        , [free_vss, free_vss, free_vss, free_vss, occupied_vss, free_vss, free_vss, free_vss]
        , [free_vss, free_vss, free_vss, free_vss, occupied_vss, occupied_vss, unknown_vss, unknown_vss]
        , [free_vss, free_vss, free_vss, free_vss, occupied_vss, unknown_vss, unknown_vss, unknown_vss]
        , [free_vss, free_vss, free_vss, occupied_vss, occupied_vss, free_vss, free_vss, free_vss]
        , [free_vss, free_vss, free_vss, occupied_vss, occupied_vss, occupied_vss, unknown_vss, unknown_vss]
        , [free_vss, free_vss, free_vss, occupied_vss, occupied_vss, unknown_vss, unknown_vss, unknown_vss]
        , [free_vss, free_vss, free_vss, occupied_vss, unknown_vss, free_vss, free_vss, free_vss]
        , [free_vss, free_vss, free_vss, occupied_vss, unknown_vss, unknown_vss, unknown_vss, unknown_vss]
        , [free_vss, free_vss, free_vss, unknown_vss, ambiguous_vss, ambiguous_vss, unknown_vss, unknown_vss]
        , [free_vss, free_vss, free_vss, unknown_vss, ambiguous_vss, free_vss, free_vss, free_vss]
        , [free_vss, free_vss, free_vss, unknown_vss, ambiguous_vss, occupied_vss, unknown_vss, unknown_vss]
        , [free_vss, free_vss, free_vss, unknown_vss, ambiguous_vss, unknown_vss, unknown_vss, unknown_vss]
        , [free_vss, free_vss, occupied_vss, ambiguous_vss, occupied_vss, free_vss, free_vss, free_vss]
        , [free_vss, free_vss, occupied_vss, ambiguous_vss, occupied_vss, occupied_vss, unknown_vss, unknown_vss]
        , [free_vss, free_vss, occupied_vss, ambiguous_vss, occupied_vss, unknown_vss, unknown_vss, unknown_vss]
        , [free_vss, free_vss, occupied_vss, occupied_vss, occupied_vss, free_vss, free_vss, free_vss]
        , [free_vss, free_vss, occupied_vss, occupied_vss, occupied_vss, occupied_vss, unknown_vss, unknown_vss]
        , [free_vss, free_vss, occupied_vss, occupied_vss, occupied_vss, unknown_vss, unknown_vss, unknown_vss]
        , [free_vss, free_vss, occupied_vss, occupied_vss, unknown_vss, free_vss, free_vss, free_vss]
        , [free_vss, free_vss, occupied_vss, occupied_vss, unknown_vss, unknown_vss, unknown_vss, unknown_vss]
        , [free_vss, free_vss, occupied_vss, unknown_vss, unknown_vss, free_vss, free_vss, free_vss]
        , [free_vss, free_vss, occupied_vss, unknown_vss, unknown_vss, unknown_vss, unknown_vss, unknown_vss]
        , [free_vss, free_vss, unknown_vss, free_vss, ambiguous_vss, ambiguous_vss, unknown_vss, unknown_vss]
        , [free_vss, free_vss, unknown_vss, free_vss, ambiguous_vss, free_vss, free_vss, free_vss]
        , [free_vss, free_vss, unknown_vss, free_vss, ambiguous_vss, unknown_vss, unknown_vss, unknown_vss]
        , [free_vss, free_vss, unknown_vss, free_vss, occupied_vss, free_vss, free_vss, free_vss]
        , [free_vss, free_vss, unknown_vss, free_vss, occupied_vss, occupied_vss, unknown_vss, unknown_vss]
        , [free_vss, free_vss, unknown_vss, free_vss, occupied_vss, unknown_vss, unknown_vss, unknown_vss]
        , [free_vss, free_vss, unknown_vss, unknown_vss, unknown_vss, free_vss, free_vss, free_vss]
        , [free_vss, free_vss, unknown_vss, unknown_vss, unknown_vss, unknown_vss, unknown_vss, unknown_vss]
        , [free_vss, occupied_vss, free_vss, free_vss, free_vss, free_vss, free_vss, free_vss]
        , [free_vss, occupied_vss, occupied_vss, unknown_vss, unknown_vss, free_vss, free_vss, free_vss]
        , [free_vss, occupied_vss, unknown_vss, unknown_vss, unknown_vss, free_vss, free_vss, free_vss]
        , [occupied_vss, free_vss, free_vss, free_vss, free_vss, free_vss, free_vss, free_vss]
        , [occupied_vss, free_vss, unknown_vss, unknown_vss, unknown_vss, free_vss, free_vss, free_vss]
        , [occupied_vss, occupied_vss, free_vss, free_vss, free_vss, free_vss, free_vss, free_vss]
        , [occupied_vss, occupied_vss, occupied_vss, unknown_vss, unknown_vss, free_vss, free_vss, free_vss]
        , [occupied_vss, occupied_vss, unknown_vss, unknown_vss, unknown_vss, free_vss, free_vss, free_vss]
       ])
       && 
         [ (!exists l':VSS_statuslist. stable(l') )*]forall l'':VSS_statuslist. [stable(l'')]val(l'' == l)
       ) 
)

